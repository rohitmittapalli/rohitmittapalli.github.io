Create a personal website for me.

You should be able to do this with static html/css. No backend please.

My name is Rohit Mittapalli.

I'm a software engineer at Applied Intution. I work on the data platform team at Applied Intution.The main technologies I work with are terraform, Spark, Apache Hudi, Python.

I am based in San Francisco, California.

My email is rohit.mittapalli@gmail.com.

My linkedin is www.linkedin.com/in/rohitmittapalli.

My github is https://github.com/rohitmittapalli.

Please have a link for a resume.

Create a section for technical books read this year and list the following:

"Designing Data-Intensive Applications" by Martin Kleppmann: An comprehensive must-read guide for anyone in the data field. Kleppmann's has essentially written the bible for any that touches data, making complex topics both understandable and engaging.

"Learning GraphQL" by Eve Porcello and Alex Banks: A well-structured introduction to GraphQL. However, given the custom nature of GraphQL implementations, it wasn't as practical for my specific needs. It's a great resource for foundational knowledge, but may not fully cover the unique aspects of bespoke projects.

"High Performance Spark" by Holden Karau, Rachel Warren, and Anya Bida: Invaluable if you're a user of a Spark cluster / actively writing Spark jobs. I have historically treated it as an index for Spark knowledge. However, the book is not as helpful for Spark cluster setup.

"Building Microservices" by Sam Newman: Offers an overview of microservice concepts. It's a good starting point but falls short in providing detailed methods - more of a thinking pattern. Essentially, the book boils down to the principles of loose coupling, high cohesion, and recognizing the complexity in microservices.

"A Philosophy of Software Design, 2nd Edition" by John Ousterhout: An excellent read for junior developers, offering valuable insights on writing clear, maintainable code. The first half is particularly strong, though the latter half tends to echo earlier points without adding much new.

"Designing Event-Driven Systems": A great introduction to the concepts of event-driven architecture, offering a solid foundation for those new to the topic. The book serves as a useful guide, though it's important to supplement it with additional resources and real-world experience to fully grasp the nuances of implementing such systems.
